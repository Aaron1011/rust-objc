var searchIndex = {};
searchIndex['doc'] = {"items":[],"paths":[]};
searchIndex['objc_foundation'] = {"items":[[0,"","objc_foundation","",null,null],[3,"NSArray","","",null,null],[3,"NSMutableArray","","",null,null],[3,"NSRange","","",null,null],[12,"location","","",0,null],[12,"length","","",0,null],[3,"NSData","","",null,null],[3,"NSMutableData","","",null,null],[3,"NSDictionary","","",null,null],[3,"NSEnumerator","","",null,null],[3,"NSFastEnumerator","","",null,null],[3,"NSObject","","",null,null],[3,"NSString","","",null,null],[3,"NSValue","","",null,null],[4,"NSComparisonResult","","",null,null],[13,"Ascending","","",1,null],[13,"Same","","",1,null],[13,"Descending","","",1,null],[11,"clone","","",1,{"inputs":[{"name":"nscomparisonresult"}],"output":{"name":"nscomparisonresult"}}],[11,"from_ordering","","",1,{"inputs":[{"name":"nscomparisonresult"},{"name":"ordering"}],"output":{"name":"nscomparisonresult"}}],[11,"as_ordering","","",1,{"inputs":[{"name":"nscomparisonresult"}],"output":{"name":"ordering"}}],[11,"clone","","",0,{"inputs":[{"name":"nsrange"}],"output":{"name":"nsrange"}}],[11,"from_range","","",0,{"inputs":[{"name":"nsrange"},{"name":"range"}],"output":{"name":"nsrange"}}],[11,"as_range","","",0,{"inputs":[{"name":"nsrange"}],"output":{"name":"range"}}],[11,"class","","",2,{"inputs":[{"name":"nsarray"}],"output":{"name":"class"}}],[11,"index","","",2,{"inputs":[{"name":"nsarray"},{"name":"usize"}],"output":{"name":"t"}}],[11,"class","","",3,{"inputs":[{"name":"nsmutablearray"}],"output":{"name":"class"}}],[11,"index","","",3,{"inputs":[{"name":"nsmutablearray"},{"name":"usize"}],"output":{"name":"t"}}],[11,"class","","",4,{"inputs":[{"name":"nsdata"}],"output":{"name":"class"}}],[11,"eq","","",4,{"inputs":[{"name":"nsdata"},{"name":"self"}],"output":{"name":"bool"}}],[11,"hash","","",4,{"inputs":[{"name":"nsdata"},{"name":"h"}],"output":null}],[11,"fmt","","",4,{"inputs":[{"name":"nsdata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"class","","",5,{"inputs":[{"name":"nsmutabledata"}],"output":{"name":"class"}}],[11,"eq","","",5,{"inputs":[{"name":"nsmutabledata"},{"name":"self"}],"output":{"name":"bool"}}],[11,"hash","","",5,{"inputs":[{"name":"nsmutabledata"},{"name":"h"}],"output":null}],[11,"fmt","","",5,{"inputs":[{"name":"nsmutabledata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"class","","",6,{"inputs":[{"name":"nsdictionary"}],"output":{"name":"class"}}],[11,"index","","",6,{"inputs":[{"name":"nsdictionary"},{"name":"k"}],"output":{"name":"v"}}],[11,"from_ptr","","",7,null],[11,"next","","",7,{"inputs":[{"name":"nsenumerator"}],"output":{"name":"option"}}],[11,"next","","",8,{"inputs":[{"name":"nsfastenumerator"}],"output":{"name":"option"}}],[11,"class","","",9,{"inputs":[{"name":"nsobject"}],"output":{"name":"class"}}],[11,"eq","","",9,{"inputs":[{"name":"nsobject"},{"name":"self"}],"output":{"name":"bool"}}],[11,"hash","","",9,{"inputs":[{"name":"nsobject"},{"name":"h"}],"output":null}],[11,"fmt","","",9,{"inputs":[{"name":"nsobject"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"class","","",10,{"inputs":[{"name":"nsstring"}],"output":{"name":"class"}}],[11,"eq","","",10,{"inputs":[{"name":"nsstring"},{"name":"self"}],"output":{"name":"bool"}}],[11,"hash","","",10,{"inputs":[{"name":"nsstring"},{"name":"h"}],"output":null}],[11,"fmt","","",10,{"inputs":[{"name":"nsstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"class","","",11,{"inputs":[{"name":"nsvalue"}],"output":{"name":"class"}}],[6,"NSMutableSharedArray","","",null,null],[6,"NSSharedArray","","",null,null],[8,"INSArray","","",null,null],[16,"Item","","",12,null],[16,"Own","","",12,null],[11,"count","","",12,{"inputs":[{"name":"insarray"}],"output":{"name":"usize"}}],[11,"object_at","","",12,{"inputs":[{"name":"insarray"},{"name":"usize"}],"output":{"name":"item"}}],[11,"first_object","","",12,{"inputs":[{"name":"insarray"}],"output":{"name":"option"}}],[11,"last_object","","",12,{"inputs":[{"name":"insarray"}],"output":{"name":"option"}}],[11,"object_enumerator","","",12,{"inputs":[{"name":"insarray"}],"output":{"name":"nsenumerator"}}],[11,"from_vec","","",12,{"inputs":[{"name":"insarray"},{"name":"vec"}],"output":{"name":"id"}}],[11,"objects_in_range","","",12,{"inputs":[{"name":"insarray"},{"name":"range"}],"output":{"name":"vec"}}],[11,"to_vec","","",12,{"inputs":[{"name":"insarray"}],"output":{"name":"vec"}}],[11,"into_vec","","",12,{"inputs":[{"name":"insarray"},{"name":"id"}],"output":{"name":"vec"}}],[11,"mut_object_at","","",12,{"inputs":[{"name":"insarray"},{"name":"usize"}],"output":{"name":"item"}}],[11,"shared_object_at","","",12,{"inputs":[{"name":"insarray"},{"name":"usize"}],"output":{"name":"shareid"}}],[11,"from_slice","","",12,null],[11,"to_shared_vec","","",12,{"inputs":[{"name":"insarray"}],"output":{"name":"vec"}}],[8,"INSMutableArray","","",null,null],[11,"add_object","","",13,{"inputs":[{"name":"insmutablearray"},{"name":"id"}],"output":null}],[11,"insert_object_at","","",13,{"inputs":[{"name":"insmutablearray"},{"name":"usize"},{"name":"id"}],"output":null}],[11,"replace_object_at","","",13,{"inputs":[{"name":"insmutablearray"},{"name":"usize"},{"name":"id"}],"output":{"name":"id"}}],[11,"remove_object_at","","",13,{"inputs":[{"name":"insmutablearray"},{"name":"usize"}],"output":{"name":"id"}}],[11,"remove_last_object","","",13,{"inputs":[{"name":"insmutablearray"}],"output":{"name":"id"}}],[11,"remove_all_objects","","",13,{"inputs":[{"name":"insmutablearray"}],"output":null}],[11,"sort_by","","",13,{"inputs":[{"name":"insmutablearray"},{"name":"f"}],"output":null}],[8,"INSData","","",null,null],[11,"len","","",14,{"inputs":[{"name":"insdata"}],"output":{"name":"usize"}}],[11,"bytes","","",14,null],[11,"with_bytes","","",14,null],[11,"from_vec","","",14,{"inputs":[{"name":"insdata"},{"name":"vec"}],"output":{"name":"id"}}],[8,"INSMutableData","","",null,null],[11,"bytes_mut","","",15,null],[11,"set_len","","",15,{"inputs":[{"name":"insmutabledata"},{"name":"usize"}],"output":null}],[11,"append","","",15,null],[11,"replace_range","","",15,null],[11,"set_bytes","","",15,null],[8,"INSDictionary","","",null,null],[16,"Key","","",16,null],[16,"Value","","",16,null],[16,"Own","","",16,null],[11,"count","","",16,{"inputs":[{"name":"insdictionary"}],"output":{"name":"usize"}}],[11,"object_for","","",16,{"inputs":[{"name":"insdictionary"},{"name":"key"}],"output":{"name":"option"}}],[11,"keys","","",16,{"inputs":[{"name":"insdictionary"}],"output":{"name":"vec"}}],[11,"values","","",16,{"inputs":[{"name":"insdictionary"}],"output":{"name":"vec"}}],[11,"keys_and_objects","","",16,null],[11,"key_enumerator","","",16,{"inputs":[{"name":"insdictionary"}],"output":{"name":"nsenumerator"}}],[11,"object_enumerator","","",16,{"inputs":[{"name":"insdictionary"}],"output":{"name":"nsenumerator"}}],[11,"keys_array","","",16,{"inputs":[{"name":"insdictionary"}],"output":{"name":"id"}}],[11,"from_keys_and_objects","","",16,null],[11,"into_values_array","","",16,{"inputs":[{"name":"insdictionary"},{"name":"id"}],"output":{"name":"id"}}],[8,"INSFastEnumeration","","",null,null],[16,"Item","","",17,null],[11,"enumerator","","",17,{"inputs":[{"name":"insfastenumeration"}],"output":{"name":"nsfastenumerator"}}],[8,"INSObject","","",null,null],[10,"class","","",18,{"inputs":[{"name":"insobject"}],"output":{"name":"class"}}],[11,"hash_code","","",18,{"inputs":[{"name":"insobject"}],"output":{"name":"usize"}}],[11,"is_equal","","",18,{"inputs":[{"name":"insobject"},{"name":"t"}],"output":{"name":"bool"}}],[11,"description","","",18,{"inputs":[{"name":"insobject"}],"output":{"name":"shareid"}}],[11,"is_kind_of","","",18,{"inputs":[{"name":"insobject"},{"name":"class"}],"output":{"name":"bool"}}],[11,"new","","",18,{"inputs":[{"name":"insobject"}],"output":{"name":"id"}}],[8,"INSCopying","","",null,null],[16,"Output","","",19,null],[11,"copy","","",19,{"inputs":[{"name":"inscopying"}],"output":{"name":"shareid"}}],[8,"INSMutableCopying","","",null,null],[16,"Output","","",20,null],[11,"mutable_copy","","",20,{"inputs":[{"name":"insmutablecopying"}],"output":{"name":"id"}}],[8,"INSString","","",null,null],[11,"len","","",21,{"inputs":[{"name":"insstring"}],"output":{"name":"usize"}}],[11,"as_str","","",21,{"inputs":[{"name":"insstring"}],"output":{"name":"str"}}],[11,"from_str","","",21,{"inputs":[{"name":"insstring"},{"name":"str"}],"output":{"name":"id"}}],[8,"INSValue","","",null,null],[16,"Value","","",22,null],[11,"value","","",22,{"inputs":[{"name":"insvalue"}],"output":{"name":"value"}}],[11,"encoding","","",22,{"inputs":[{"name":"insvalue"}],"output":{"name":"encoding"}}],[11,"from_value","","",22,{"inputs":[{"name":"insvalue"},{"name":"value"}],"output":{"name":"id"}}],[14,"object_struct!","","",null,null],[11,"count","","",12,{"inputs":[{"name":"insarray"}],"output":{"name":"usize"}}],[11,"object_at","","",12,{"inputs":[{"name":"insarray"},{"name":"usize"}],"output":{"name":"item"}}],[11,"first_object","","",12,{"inputs":[{"name":"insarray"}],"output":{"name":"option"}}],[11,"last_object","","",12,{"inputs":[{"name":"insarray"}],"output":{"name":"option"}}],[11,"object_enumerator","","",12,{"inputs":[{"name":"insarray"}],"output":{"name":"nsenumerator"}}],[11,"from_vec","","",12,{"inputs":[{"name":"insarray"},{"name":"vec"}],"output":{"name":"id"}}],[11,"objects_in_range","","",12,{"inputs":[{"name":"insarray"},{"name":"range"}],"output":{"name":"vec"}}],[11,"to_vec","","",12,{"inputs":[{"name":"insarray"}],"output":{"name":"vec"}}],[11,"into_vec","","",12,{"inputs":[{"name":"insarray"},{"name":"id"}],"output":{"name":"vec"}}],[11,"mut_object_at","","",12,{"inputs":[{"name":"insarray"},{"name":"usize"}],"output":{"name":"item"}}],[11,"shared_object_at","","",12,{"inputs":[{"name":"insarray"},{"name":"usize"}],"output":{"name":"shareid"}}],[11,"from_slice","","",12,null],[11,"to_shared_vec","","",12,{"inputs":[{"name":"insarray"}],"output":{"name":"vec"}}],[11,"add_object","","",13,{"inputs":[{"name":"insmutablearray"},{"name":"id"}],"output":null}],[11,"insert_object_at","","",13,{"inputs":[{"name":"insmutablearray"},{"name":"usize"},{"name":"id"}],"output":null}],[11,"replace_object_at","","",13,{"inputs":[{"name":"insmutablearray"},{"name":"usize"},{"name":"id"}],"output":{"name":"id"}}],[11,"remove_object_at","","",13,{"inputs":[{"name":"insmutablearray"},{"name":"usize"}],"output":{"name":"id"}}],[11,"remove_last_object","","",13,{"inputs":[{"name":"insmutablearray"}],"output":{"name":"id"}}],[11,"remove_all_objects","","",13,{"inputs":[{"name":"insmutablearray"}],"output":null}],[11,"sort_by","","",13,{"inputs":[{"name":"insmutablearray"},{"name":"f"}],"output":null}],[11,"len","","",14,{"inputs":[{"name":"insdata"}],"output":{"name":"usize"}}],[11,"bytes","","",14,null],[11,"with_bytes","","",14,null],[11,"from_vec","","",14,{"inputs":[{"name":"insdata"},{"name":"vec"}],"output":{"name":"id"}}],[11,"bytes_mut","","",15,null],[11,"set_len","","",15,{"inputs":[{"name":"insmutabledata"},{"name":"usize"}],"output":null}],[11,"append","","",15,null],[11,"replace_range","","",15,null],[11,"set_bytes","","",15,null],[11,"count","","",16,{"inputs":[{"name":"insdictionary"}],"output":{"name":"usize"}}],[11,"object_for","","",16,{"inputs":[{"name":"insdictionary"},{"name":"key"}],"output":{"name":"option"}}],[11,"keys","","",16,{"inputs":[{"name":"insdictionary"}],"output":{"name":"vec"}}],[11,"values","","",16,{"inputs":[{"name":"insdictionary"}],"output":{"name":"vec"}}],[11,"keys_and_objects","","",16,null],[11,"key_enumerator","","",16,{"inputs":[{"name":"insdictionary"}],"output":{"name":"nsenumerator"}}],[11,"object_enumerator","","",16,{"inputs":[{"name":"insdictionary"}],"output":{"name":"nsenumerator"}}],[11,"keys_array","","",16,{"inputs":[{"name":"insdictionary"}],"output":{"name":"id"}}],[11,"from_keys_and_objects","","",16,null],[11,"into_values_array","","",16,{"inputs":[{"name":"insdictionary"},{"name":"id"}],"output":{"name":"id"}}],[11,"enumerator","","",17,{"inputs":[{"name":"insfastenumeration"}],"output":{"name":"nsfastenumerator"}}],[11,"hash_code","","",18,{"inputs":[{"name":"insobject"}],"output":{"name":"usize"}}],[11,"is_equal","","",18,{"inputs":[{"name":"insobject"},{"name":"t"}],"output":{"name":"bool"}}],[11,"description","","",18,{"inputs":[{"name":"insobject"}],"output":{"name":"shareid"}}],[11,"is_kind_of","","",18,{"inputs":[{"name":"insobject"},{"name":"class"}],"output":{"name":"bool"}}],[11,"new","","",18,{"inputs":[{"name":"insobject"}],"output":{"name":"id"}}],[11,"copy","","",19,{"inputs":[{"name":"inscopying"}],"output":{"name":"shareid"}}],[11,"mutable_copy","","",20,{"inputs":[{"name":"insmutablecopying"}],"output":{"name":"id"}}],[11,"len","","",21,{"inputs":[{"name":"insstring"}],"output":{"name":"usize"}}],[11,"as_str","","",21,{"inputs":[{"name":"insstring"}],"output":{"name":"str"}}],[11,"from_str","","",21,{"inputs":[{"name":"insstring"},{"name":"str"}],"output":{"name":"id"}}],[11,"value","","",22,{"inputs":[{"name":"insvalue"}],"output":{"name":"value"}}],[11,"encoding","","",22,{"inputs":[{"name":"insvalue"}],"output":{"name":"encoding"}}],[11,"from_value","","",22,{"inputs":[{"name":"insvalue"},{"name":"value"}],"output":{"name":"id"}}]],"paths":[[3,"NSRange"],[4,"NSComparisonResult"],[3,"NSArray"],[3,"NSMutableArray"],[3,"NSData"],[3,"NSMutableData"],[3,"NSDictionary"],[3,"NSEnumerator"],[3,"NSFastEnumerator"],[3,"NSObject"],[3,"NSString"],[3,"NSValue"],[8,"INSArray"],[8,"INSMutableArray"],[8,"INSData"],[8,"INSMutableData"],[8,"INSDictionary"],[8,"INSFastEnumeration"],[8,"INSObject"],[8,"INSCopying"],[8,"INSMutableCopying"],[8,"INSString"],[8,"INSValue"]]};
searchIndex['objc_id'] = {"items":[[0,"","objc_id","Rust smart pointers for Objective-C reference counting.",null,null],[3,"Id","","A pointer type for Objective-C's reference counted objects.",null,null],[3,"WeakId","","A pointer type for a weak reference to an Objective-C reference counted\nobject.",null,null],[4,"Owned","","A type used to mark that a struct owns the object(s) it contains,\nso it has the sole references to them.",null,null],[4,"Shared","","A type used to mark that the object(s) a struct contains are shared,\nso there may be other references to them.",null,null],[11,"from_ptr","","Constructs an `Id` from a pointer to an unretained object and\nretains it. Panics if the pointer is null.\nUnsafe because the pointer must be to a valid object and\nthe caller must ensure the ownership is correct.",0,null],[11,"from_retained_ptr","","Constructs an `Id` from a pointer to a retained object; this won't\nretain the pointer, so the caller must ensure the object has a +1\nretain count. Panics if the pointer is null.\nUnsafe because the pointer must be to a valid object and\nthe caller must ensure the ownership is correct.",0,null],[11,"share","","\"Downgrade\" an owned `Id` to a `ShareId`, allowing it to be cloned.",0,{"inputs":[{"name":"id"}],"output":{"name":"shareid"}}],[11,"clone","","",0,{"inputs":[{"name":"id"}],"output":{"name":"shareid"}}],[11,"deref","","",0,{"inputs":[{"name":"id"}],"output":{"name":"t"}}],[11,"deref_mut","","",0,{"inputs":[{"name":"id"}],"output":{"name":"t"}}],[11,"eq","","",0,{"inputs":[{"name":"id"},{"name":"id"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"id"},{"name":"id"}],"output":{"name":"bool"}}],[11,"hash","","",0,{"inputs":[{"name":"id"},{"name":"h"}],"output":null}],[11,"fmt","","",0,{"inputs":[{"name":"id"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"id"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Construct a new `WeakId` referencing the given `ShareId`.",1,{"inputs":[{"name":"weakid"},{"name":"shareid"}],"output":{"name":"weakid"}}],[11,"load","","Load a `ShareId` from the `WeakId` if the object still exists.\nReturns `None` if the object has been deallocated.",1,{"inputs":[{"name":"weakid"}],"output":{"name":"option"}}],[6,"ShareId","","A convenient alias for a shared `Id`.",null,null],[8,"Ownership","","A type that marks what type of ownership a struct has over the object(s)\nit contains; specifically, either `Owned` or `Shared`.",null,null]],"paths":[[3,"Id"],[3,"WeakId"]]};
searchIndex['objc_exception'] = {"items":[[0,"","objc_exception","Rust interface for Objective-C's `@throw` and `@try`/`@catch` statements.",null,null],[4,"Exception","","An opaque type representing any Objective-C object thrown as an exception.",null,null],[5,"throw","","Throws an Objective-C exception.\nThe argument must be a pointer to an Objective-C object.",null,null],[5,"try","","Tries to execute the given closure and catches an Objective-C exception\nif one is thrown.",null,{"inputs":[{"name":"f"}],"output":{"name":"result"}}]],"paths":[]};
searchIndex['objc'] = {"items":[[0,"","objc","Objective-C Runtime bindings and wrapper for Rust.",null,null],[3,"Encoding","","An Objective-C type encoding.",null,null],[0,"runtime","","A Rust interface for the functionality of the Objective-C runtime.",null,null],[3,"Sel","objc::runtime","A type that represents a method selector.",null,null],[3,"Ivar","","A type that represents an instance variable.",null,null],[3,"Method","","A type that represents a method in a class definition.",null,null],[3,"Class","","A type that represents an Objective-C class.",null,null],[3,"Object","","A type that represents an instance of a class.",null,null],[3,"Super","","Specifies the superclass of an instance.",null,null],[12,"receiver","","Specifies an instance of a class.",0,null],[12,"superclass","","Specifies the particular superclass of the instance to message.",0,null],[5,"sel_registerName","","",null,null],[5,"sel_getName","","",null,null],[5,"class_getName","","",null,null],[5,"class_getSuperclass","","",null,null],[5,"class_getInstanceSize","","",null,null],[5,"class_getInstanceMethod","","",null,null],[5,"class_getInstanceVariable","","",null,null],[5,"class_copyMethodList","","",null,null],[5,"class_copyIvarList","","",null,null],[5,"class_addMethod","","",null,null],[5,"class_addIvar","","",null,null],[5,"objc_allocateClassPair","","",null,null],[5,"objc_disposeClassPair","","",null,null],[5,"objc_registerClassPair","","",null,null],[5,"object_getClass","","",null,null],[5,"objc_getClassList","","",null,null],[5,"objc_copyClassList","","",null,null],[5,"objc_getClass","","",null,null],[5,"ivar_getName","","",null,null],[5,"ivar_getOffset","","",null,null],[5,"ivar_getTypeEncoding","","",null,null],[5,"objc_msgSend","","",null,null],[5,"objc_msgSend_stret","","",null,null],[5,"objc_msgSendSuper","","",null,null],[5,"objc_msgSendSuper_stret","","",null,null],[5,"method_getName","","",null,null],[5,"method_getImplementation","","",null,null],[5,"method_copyReturnType","","",null,null],[5,"method_copyArgumentType","","",null,null],[5,"method_getNumberOfArguments","","",null,null],[5,"method_setImplementation","","",null,null],[5,"method_exchangeImplementations","","",null,null],[6,"BOOL","","The Objective-C `BOOL` type.",null,null],[6,"Imp","","A pointer to the start of a method implementation.",null,null],[17,"YES","","The equivalent of true for Objective-C's `BOOL` type.",null,null],[17,"NO","","The equivalent of false for Objective-C's `BOOL` type.",null,null],[11,"register","","Registers a method with the Objective-C runtime system,\nmaps the method name to a selector, and returns the selector value.",1,{"inputs":[{"name":"sel"},{"name":"str"}],"output":{"name":"sel"}}],[11,"name","","Returns the name of the method specified by self.",1,{"inputs":[{"name":"sel"}],"output":{"name":"str"}}],[11,"eq","","",1,{"inputs":[{"name":"sel"},{"name":"sel"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"sel"}],"output":{"name":"sel"}}],[11,"fmt","","",1,{"inputs":[{"name":"sel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"name","","Returns the name of self.",2,{"inputs":[{"name":"ivar"}],"output":{"name":"str"}}],[11,"offset","","Returns the offset of self.",2,{"inputs":[{"name":"ivar"}],"output":{"name":"isize"}}],[11,"type_encoding","","Returns the `Encoding` of self.",2,{"inputs":[{"name":"ivar"}],"output":{"name":"encoding"}}],[11,"name","","Returns the name of self.",3,{"inputs":[{"name":"method"}],"output":{"name":"sel"}}],[11,"return_type","","Returns the `Encoding` of self's return type.",3,{"inputs":[{"name":"method"}],"output":{"name":"encoding"}}],[11,"argument_type","","Returns the `Encoding` of a single parameter type of self, or\n`None` if self has no parameter at the given index.",3,{"inputs":[{"name":"method"},{"name":"usize"}],"output":{"name":"option"}}],[11,"arguments_count","","Returns the number of arguments accepted by self.",3,{"inputs":[{"name":"method"}],"output":{"name":"usize"}}],[11,"implementation","","Returns the implementation of self.",3,{"inputs":[{"name":"method"}],"output":{"name":"imp"}}],[11,"get","","Returns the class definition of a specified class, or `None` if the\nclass is not registered with the Objective-C runtime.",4,{"inputs":[{"name":"class"},{"name":"str"}],"output":{"name":"option"}}],[11,"classes","","Obtains the list of registered class definitions.",4,{"inputs":[{"name":"class"}],"output":{"name":"mallocbuffer"}}],[11,"classes_count","","Returns the total number of registered classes.",4,{"inputs":[{"name":"class"}],"output":{"name":"usize"}}],[11,"name","","Returns the name of self.",4,{"inputs":[{"name":"class"}],"output":{"name":"str"}}],[11,"superclass","","Returns the superclass of self, or `None` if self is a root class.",4,{"inputs":[{"name":"class"}],"output":{"name":"option"}}],[11,"metaclass","","Returns the metaclass of self.",4,{"inputs":[{"name":"class"}],"output":{"name":"class"}}],[11,"instance_size","","Returns the size of instances of self.",4,{"inputs":[{"name":"class"}],"output":{"name":"usize"}}],[11,"instance_method","","Returns a specified instance method for self, or `None` if self and\nits superclasses do not contain an instance method with the\nspecified selector.",4,{"inputs":[{"name":"class"},{"name":"sel"}],"output":{"name":"option"}}],[11,"instance_variable","","Returns the ivar for a specified instance variable of self, or `None`\nif self has no ivar with the given name.",4,{"inputs":[{"name":"class"},{"name":"str"}],"output":{"name":"option"}}],[11,"instance_methods","","Describes the instance methods implemented by self.",4,{"inputs":[{"name":"class"}],"output":{"name":"mallocbuffer"}}],[11,"instance_variables","","Describes the instance variables declared by self.",4,{"inputs":[{"name":"class"}],"output":{"name":"mallocbuffer"}}],[11,"eq","","",4,{"inputs":[{"name":"class"},{"name":"class"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"class"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"class","","Returns the class of self.",5,{"inputs":[{"name":"object"}],"output":{"name":"class"}}],[11,"get_ivar","","Returns a reference to the ivar of self with the given name.\nPanics if self has no ivar with the given name.\nUnsafe because the caller must ensure that the ivar is actually\nof type `T`.",5,{"inputs":[{"name":"object"},{"name":"str"}],"output":{"name":"t"}}],[11,"get_mut_ivar","","Returns a mutable reference to the ivar of self with the given name.\nPanics if self has no ivar with the given name.\nUnsafe because the caller must ensure that the ivar is actually\nof type `T`.",5,{"inputs":[{"name":"object"},{"name":"str"}],"output":{"name":"t"}}],[11,"set_ivar","","Sets the value of the ivar of self with the given name.\nPanics if self has no ivar with the given name.\nUnsafe because the caller must ensure that the ivar is actually\nof type `T`.",5,{"inputs":[{"name":"object"},{"name":"str"},{"name":"t"}],"output":null}],[11,"fmt","","",5,{"inputs":[{"name":"object"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"declare","objc","Functionality for declaring Objective-C classes.",null,null],[3,"UnequalArgsError","objc::declare","An error returned from `MethodImplementation::imp_for` to indicate that a\nselector and function accept unequal numbers of arguments.",null,null],[3,"ClassDecl","","A type for declaring a new class and adding new methods and ivars to it\nbefore registering it.",null,null],[8,"MethodImplementation","","Types that can be used as the implementation of an Objective-C method.",null,null],[16,"Callee","","The callee type of the method.",6,null],[16,"Ret","","The return type of the method.",6,null],[10,"argument_encodings","","Returns the type encodings of Self's arguments.",6,{"inputs":[{"name":"methodimplementation"}],"output":{"name":"box"}}],[10,"imp_for","","Returns self as an `Imp` of a method for the given selector.",6,{"inputs":[{"name":"methodimplementation"},{"name":"sel"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"unequalargserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"unequalargserror"},{"name":"unequalargserror"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"unequalargserror"},{"name":"unequalargserror"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"unequalargserror"}],"output":{"name":"unequalargserror"}}],[11,"fmt","","",7,{"inputs":[{"name":"unequalargserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",7,{"inputs":[{"name":"unequalargserror"}],"output":{"name":"str"}}],[11,"new","","Constructs a `ClassDecl` with the given superclass and name.\nReturns `None` if the class couldn't be allocated.",8,{"inputs":[{"name":"classdecl"},{"name":"class"},{"name":"str"}],"output":{"name":"option"}}],[11,"add_method","","Adds a method with the given name and implementation to self.\nPanics if the method wasn't sucessfully added\nor if the selector and function take different numbers of arguments.\nUnsafe because the caller must ensure that the types match those that\nare expected when the method is invoked from Objective-C.",8,{"inputs":[{"name":"classdecl"},{"name":"sel"},{"name":"f"}],"output":null}],[11,"add_class_method","","Adds a class method with the given name and implementation to self.\nPanics if the method wasn't sucessfully added\nor if the selector and function take different numbers of arguments.\nUnsafe because the caller must ensure that the types match those that\nare expected when the method is invoked from Objective-C.",8,{"inputs":[{"name":"classdecl"},{"name":"sel"},{"name":"f"}],"output":null}],[11,"add_ivar","","Adds an ivar with type `T` and the provided name to self.\nPanics if the ivar wasn't successfully added.",8,{"inputs":[{"name":"classdecl"},{"name":"str"}],"output":null}],[11,"register","","Registers self, consuming it and returning a reference to the\nnewly registered `Class`.",8,{"inputs":[{"name":"classdecl"}],"output":{"name":"class"}}],[11,"drop","","",8,{"inputs":[{"name":"classdecl"}],"output":null}],[11,"from_str","objc","Constructs an `Encoding` from its string representation.\nUnsafe because the caller must ensure the string is a valid encoding.",9,{"inputs":[{"name":"encoding"},{"name":"str"}],"output":{"name":"encoding"}}],[11,"as_str","","Returns self as a `str`.",9,{"inputs":[{"name":"encoding"}],"output":{"name":"str"}}],[11,"clone","","",9,{"inputs":[{"name":"encoding"}],"output":{"name":"encoding"}}],[11,"eq","","",9,{"inputs":[{"name":"encoding"},{"name":"encoding"}],"output":{"name":"bool"}}],[11,"fmt","","",9,{"inputs":[{"name":"encoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","objc::runtime","",1,{"inputs":[{"name":"sel"}],"output":{"name":"encoding"}}],[11,"encode","core::option","",10,{"inputs":[{"name":"option"}],"output":{"name":"encoding"}}],[11,"encode","","",10,{"inputs":[{"name":"option"}],"output":{"name":"encoding"}}],[11,"encode","","",10,{"inputs":[{"name":"option"}],"output":{"name":"encoding"}}],[11,"encode","","",10,{"inputs":[{"name":"option"}],"output":{"name":"encoding"}}],[8,"Encode","objc","Types that have an Objective-C type encoding.",null,null],[10,"encode","","Returns the Objective-C type encoding for Self.",11,{"inputs":[{"name":"encode"}],"output":{"name":"encoding"}}],[8,"Message","","Types that may be sent Objective-C messages.\nFor example: objects, classes, and blocks.",null,null],[8,"MessageArguments","","Types that may be used as the arguments of an Objective-C message.",null,null],[10,"send","","Sends a message to the given obj with the given selector and self as\nthe arguments.",12,null],[10,"send_super","","Sends a message to the superclass of an instance of a class with self\nas the arguments.",12,null],[14,"sel!","","Registers a selector, returning a `Sel`.",null,null],[14,"msg_send!","","Sends a message to an object.",null,null]],"paths":[[3,"Super"],[3,"Sel"],[3,"Ivar"],[3,"Method"],[3,"Class"],[3,"Object"],[8,"MethodImplementation"],[3,"UnequalArgsError"],[3,"ClassDecl"],[3,"Encoding"],[4,"Option"],[8,"Encode"],[8,"MessageArguments"]]};
searchIndex['objc_test_utils'] = {"items":[[0,"","objc_test_utils","",null,null],[4,"IntBlock","","A block that takes no arguments and returns an integer: `int32_t (^)()`.",null,null],[4,"AddBlock","","A block that takes one integer argument, adds to it, and returns the sum:\n`int32_t (^)(int32_t)`.",null,null],[5,"get_int_block","","Returns a pointer to a global `IntBlock` that returns 7.",null,null],[5,"get_int_block_with","","Returns a pointer to a copied `IntBlock` that returns `i`.",null,null],[5,"get_add_block","","Returns a pointer to a global `AddBlock` that returns its argument + 7.",null,null],[5,"get_add_block_with","","Returns a pointer to a copied `AddBlock` that returns its argument + `i`.",null,null],[5,"invoke_int_block","","Invokes an `IntBlock` and returns its result.",null,null],[5,"invoke_add_block","","Invokes an `AddBlock` with `a` and returns the result.",null,null]],"paths":[]};
searchIndex['dispatch'] = {"items":[[0,"","dispatch","Rust wrapper for Apple's Grand Central Dispatch (GCD).",null,null],[3,"Queue","","A Grand Central Dispatch queue.",null,null],[3,"SuspendGuard","","An RAII guard which will resume a suspended `Queue` when dropped.",null,null],[3,"Group","","A Grand Central Dispatch group.",null,null],[3,"GroupGuard","","An RAII guard which will leave a `Group` when dropped.",null,null],[4,"QueueAttribute","","The type of a dispatch queue.",null,null],[13,"Serial","","The queue executes blocks serially in FIFO order.",0,null],[13,"Concurrent","","The queue executes blocks concurrently.",0,null],[4,"QueuePriority","","The priority of a global concurrent queue.",null,null],[13,"High","","The queue is scheduled for execution before any default priority or low\npriority queue.",1,null],[13,"Default","","The queue is scheduled for execution after all high priority queues,\nbut before any low priority queues.",1,null],[13,"Low","","The queue is scheduled for execution after all default priority and\nhigh priority queues.",1,null],[13,"Background","","The queue is scheduled for execution after all high priority queues\nhave been scheduled. The system runs items on a thread whose\npriority is set for background status and any disk I/O is throttled to\nminimize the impact on the system.",1,null],[0,"ffi","","Raw foreign function interface for libdispatch.",null,null],[4,"dispatch_object_s","dispatch::ffi","",null,null],[5,"dispatch_get_main_queue","","",null,{"inputs":[],"output":{"name":"dispatch_queue_t"}}],[5,"dispatch_get_global_queue","","",null,null],[5,"dispatch_queue_create","","",null,null],[5,"dispatch_queue_get_label","","",null,null],[5,"dispatch_set_target_queue","","",null,null],[5,"dispatch_main","","",null,null],[5,"dispatch_async_f","","",null,null],[5,"dispatch_sync_f","","",null,null],[5,"dispatch_after_f","","",null,null],[5,"dispatch_apply_f","","",null,null],[5,"dispatch_once_f","","",null,null],[5,"dispatch_group_async_f","","",null,null],[5,"dispatch_group_create","","",null,null],[5,"dispatch_group_enter","","",null,null],[5,"dispatch_group_leave","","",null,null],[5,"dispatch_group_notify_f","","",null,null],[5,"dispatch_group_wait","","",null,null],[5,"dispatch_get_context","","",null,null],[5,"dispatch_release","","",null,null],[5,"dispatch_resume","","",null,null],[5,"dispatch_retain","","",null,null],[5,"dispatch_set_context","","",null,null],[5,"dispatch_set_finalizer_f","","",null,null],[5,"dispatch_suspend","","",null,null],[5,"dispatch_semaphore_create","","",null,null],[5,"dispatch_semaphore_signal","","",null,null],[5,"dispatch_semaphore_wait","","",null,null],[5,"dispatch_barrier_async_f","","",null,null],[5,"dispatch_barrier_sync_f","","",null,null],[5,"dispatch_time","","",null,null],[5,"dispatch_walltime","","",null,null],[6,"dispatch_function_t","","",null,null],[6,"dispatch_semaphore_t","","",null,null],[6,"dispatch_group_t","","",null,null],[6,"dispatch_object_t","","",null,null],[6,"dispatch_once_t","","",null,null],[6,"dispatch_queue_t","","",null,null],[6,"dispatch_time_t","","",null,null],[6,"dispatch_queue_attr_t","","",null,null],[7,"DISPATCH_QUEUE_CONCURRENT","","",null,null],[17,"DISPATCH_QUEUE_SERIAL","","",null,null],[17,"DISPATCH_QUEUE_PRIORITY_HIGH","","",null,null],[17,"DISPATCH_QUEUE_PRIORITY_DEFAULT","","",null,null],[17,"DISPATCH_QUEUE_PRIORITY_LOW","","",null,null],[17,"DISPATCH_QUEUE_PRIORITY_BACKGROUND","","",null,null],[17,"DISPATCH_TIME_NOW","","",null,null],[17,"DISPATCH_TIME_FOREVER","","",null,null],[11,"main","dispatch","Returns the serial dispatch `Queue` associated with the application's\nmain thread.",2,{"inputs":[{"name":"queue"}],"output":{"name":"self"}}],[11,"global","","Returns a system-defined global concurrent `Queue` with the specified\npriority.",2,{"inputs":[{"name":"queue"},{"name":"queuepriority"}],"output":{"name":"self"}}],[11,"create","","Creates a new dispatch `Queue`.",2,{"inputs":[{"name":"queue"},{"name":"str"},{"name":"queueattribute"}],"output":{"name":"self"}}],[11,"with_target_queue","","Creates a new dispatch `Queue` with the given target queue.",2,{"inputs":[{"name":"queue"},{"name":"str"},{"name":"queueattribute"},{"name":"queue"}],"output":{"name":"self"}}],[11,"label","","Returns the label that was specified for self.",2,{"inputs":[{"name":"queue"}],"output":{"name":"str"}}],[11,"sync","","Submits a closure for execution on self and waits until it completes.",2,{"inputs":[{"name":"queue"},{"name":"f"}],"output":{"name":"t"}}],[11,"async","","Submits a closure for asynchronous execution on self and returns\nimmediately.",2,{"inputs":[{"name":"queue"},{"name":"f"}],"output":null}],[11,"after_ms","","After the specified delay, submits a closure for asynchronous execution\non self.",2,{"inputs":[{"name":"queue"},{"name":"u32"},{"name":"f"}],"output":null}],[11,"after","","After the specified delay, submits a closure for asynchronous execution\non self.",2,{"inputs":[{"name":"queue"},{"name":"duration"},{"name":"f"}],"output":null}],[11,"apply","","Submits a closure to be executed on self the given number of iterations\nand waits until it completes.",2,{"inputs":[{"name":"queue"},{"name":"usize"},{"name":"f"}],"output":null}],[11,"foreach","","Submits a closure to be executed on self for each element of the\nprovided slice and waits until it completes.",2,null],[11,"map","","Submits a closure to be executed on self for each element of the\nprovided vector and returns a `Vec` of the mapped elements.",2,{"inputs":[{"name":"queue"},{"name":"vec"},{"name":"f"}],"output":{"name":"vec"}}],[11,"barrier_sync","","Submits a closure to be executed on self as a barrier and waits until\nit completes.",2,{"inputs":[{"name":"queue"},{"name":"f"}],"output":{"name":"t"}}],[11,"barrier_async","","Submits a closure to be executed on self as a barrier and returns\nimmediately.",2,{"inputs":[{"name":"queue"},{"name":"f"}],"output":null}],[11,"suspend","","Suspends the invocation of blocks on self and returns a `SuspendGuard`\nthat can be dropped to resume.",2,{"inputs":[{"name":"queue"}],"output":{"name":"suspendguard"}}],[11,"clone","","",2,{"inputs":[{"name":"queue"}],"output":{"name":"self"}}],[11,"drop","","",2,{"inputs":[{"name":"queue"}],"output":null}],[11,"resume","","Drops self, allowing the suspended `Queue` to resume.",3,{"inputs":[{"name":"suspendguard"}],"output":null}],[11,"clone","","",3,{"inputs":[{"name":"suspendguard"}],"output":{"name":"self"}}],[11,"drop","","",3,{"inputs":[{"name":"suspendguard"}],"output":null}],[11,"create","","Creates a new dispatch `Group`.",4,{"inputs":[{"name":"group"}],"output":{"name":"group"}}],[11,"enter","","Indicates that a closure has entered self, and increments the current\ncount of outstanding tasks. Returns a `GroupGuard` that should be\ndropped when the closure leaves self, decrementing the count.",4,{"inputs":[{"name":"group"}],"output":{"name":"groupguard"}}],[11,"async","","Submits a closure asynchronously to the given `Queue` and associates it\nwith self.",4,{"inputs":[{"name":"group"},{"name":"queue"},{"name":"f"}],"output":null}],[11,"notify","","Schedules a closure to be submitted to the given `Queue` when all tasks\nassociated with self have completed.\nIf self is empty, the closure is submitted immediately.",4,{"inputs":[{"name":"group"},{"name":"queue"},{"name":"f"}],"output":null}],[11,"wait","","Waits synchronously for all tasks associated with self to complete.",4,{"inputs":[{"name":"group"}],"output":null}],[11,"wait_timeout_ms","","Waits for all tasks associated with self to complete within the\nspecified duration.\nReturns true if the tasks completed or false if the timeout elapsed.",4,{"inputs":[{"name":"group"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"wait_timeout","","Waits for all tasks associated with self to complete within the\nspecified duration.\nReturns true if the tasks completed or false if the timeout elapsed.",4,{"inputs":[{"name":"group"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"is_empty","","Returns whether self is currently empty.",4,{"inputs":[{"name":"group"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"group"}],"output":{"name":"self"}}],[11,"drop","","",4,{"inputs":[{"name":"group"}],"output":null}],[11,"leave","","Drops self, leaving the `Group`.",5,{"inputs":[{"name":"groupguard"}],"output":null}],[11,"clone","","",5,{"inputs":[{"name":"groupguard"}],"output":{"name":"self"}}],[11,"drop","","",5,{"inputs":[{"name":"groupguard"}],"output":null}]],"paths":[[4,"QueueAttribute"],[4,"QueuePriority"],[3,"Queue"],[3,"SuspendGuard"],[3,"Group"],[3,"GroupGuard"]]};
searchIndex['malloc_buf'] = {"items":[[0,"","malloc_buf","",null,null],[3,"MallocBuffer","","A type that represents a `malloc`'d chunk of memory.",null,null],[11,"new","","Constructs a new `MallocBuffer` for a `malloc`'d buffer\nwith the given length at the given pointer.\nReturns `None` if the given pointer is null and the length is not 0.",0,null],[11,"deref","","",0,null]],"paths":[[3,"MallocBuffer"]]};
searchIndex['libc'] = {"items":[[0,"","libc","Crate docs",null,null],[3,"utimbuf","","",null,null],[12,"actime","","",0,null],[12,"modtime","","",0,null],[3,"timeval","","",null,null],[12,"tv_sec","","",1,null],[12,"tv_usec","","",1,null],[3,"timespec","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_nsec","","",2,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",3,null],[12,"rlim_max","","",3,null],[3,"rusage","","",null,null],[12,"ru_utime","","",4,null],[12,"ru_stime","","",4,null],[12,"ru_maxrss","","",4,null],[12,"ru_ixrss","","",4,null],[12,"ru_idrss","","",4,null],[12,"ru_isrss","","",4,null],[12,"ru_minflt","","",4,null],[12,"ru_majflt","","",4,null],[12,"ru_nswap","","",4,null],[12,"ru_inblock","","",4,null],[12,"ru_oublock","","",4,null],[12,"ru_msgsnd","","",4,null],[12,"ru_msgrcv","","",4,null],[12,"ru_nsignals","","",4,null],[12,"ru_nvcsw","","",4,null],[12,"ru_nivcsw","","",4,null],[3,"in_addr","","",null,null],[12,"s_addr","","",5,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",6,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",7,null],[12,"imr_interface","","",7,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",8,null],[12,"ipv6mr_interface","","",8,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",9,null],[12,"dli_fbase","","",9,null],[12,"dli_sname","","",9,null],[12,"dli_saddr","","",9,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memcmp","","",null,null],[5,"memchr","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"getdtablesize","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_create","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"sigaltstack","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"getsid","","",null,null],[5,"madvise","","",null,null],[5,"putenv","","",null,null],[5,"readlink","","",null,null],[5,"msync","","",null,null],[5,"sysconf","","",null,null],[5,"usleep","","",null,null],[5,"recvfrom","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"mkfifo","","",null,null],[5,"getpwuid_r","","",null,null],[5,"posix_memalign","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"select","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"timegm","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[11,"is_some","core::option","Returns `true` if the option is a `Some` value",10,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",10,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option<T>` to `Option<&T>`",10,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option<T>` to `Option<&mut T>`",10,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut_slice","","Converts from `Option<T>` to `&mut [T]` (without copying)",10,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`",10,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option<T>` if it is `Some(v)`.",10,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",10,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",10,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option<T>` to `Option<U>` by applying a function to a contained value",10,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",10,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",10,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",10,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",10,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",10,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",10,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",10,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",10,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",10,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",10,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",10,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_slice","","Converts from `Option<T>` to `&[T]` (without copying)",10,null],[11,"cloned","","Maps an Option<&T> to an Option<T> by cloning the contents of the Option.",10,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",10,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"fmt","core::num","",11,{"inputs":[{"name":"wrapping"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"cmp","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"option"}}],[11,"lt","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"le","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"gt","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ge","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"eq","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"from_small","core::num::flt2dec::bignum","Makes a bignum from one digit.",12,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"from_u64","","Makes a bignum from `u64` value.",12,{"inputs":[{"name":"big32x40"},{"name":"u64"}],"output":{"name":"big32x40"}}],[11,"digits","","Return the internal digits as a slice `[a, b, c, ...]` such that the numeric\nvalue is `a + b * 2^W + c * 2^(2W) + ...` where `W` is the number of bits in\nthe digit type.",12,null],[11,"get_bit","","Return the `i`-th bit where bit 0 is the least significant one.\nIn other words, the bit with weight `2^i`.",12,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"is_zero","","Returns true if the bignum is zero.",12,{"inputs":[{"name":"big32x40"}],"output":{"name":"bool"}}],[11,"bit_length","","Returns the number of bits necessary to represent this value. Note that zero\nis considered to need 0 bits.",12,{"inputs":[{"name":"big32x40"}],"output":{"name":"usize"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",12,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"add_small","","",12,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",12,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",12,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",12,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"big32x40"}}],[11,"mul_pow5","","Multiplies itself by `5^e` and returns its own mutable reference.",12,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"big32x40"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",12,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",12,null],[11,"div_rem","","Divide self by another bignum, overwriting `q` with the quotient and `r` with the\nremainder.",12,null],[11,"eq","","",12,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",12,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"option"}}],[11,"cmp","","",12,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"ordering"}}],[11,"clone","","",12,{"inputs":[{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"fmt","","",12,{"inputs":[{"name":"big32x40"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_small","core::num::flt2dec::bignum::tests","Makes a bignum from one digit.",13,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"from_u64","","Makes a bignum from `u64` value.",13,{"inputs":[{"name":"big8x3"},{"name":"u64"}],"output":{"name":"big8x3"}}],[11,"digits","","Return the internal digits as a slice `[a, b, c, ...]` such that the numeric\nvalue is `a + b * 2^W + c * 2^(2W) + ...` where `W` is the number of bits in\nthe digit type.",13,null],[11,"get_bit","","Return the `i`-th bit where bit 0 is the least significant one.\nIn other words, the bit with weight `2^i`.",13,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"is_zero","","Returns true if the bignum is zero.",13,{"inputs":[{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"bit_length","","Returns the number of bits necessary to represent this value. Note that zero\nis considered to need 0 bits.",13,{"inputs":[{"name":"big8x3"}],"output":{"name":"usize"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",13,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"add_small","","",13,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",13,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",13,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",13,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_pow5","","Multiplies itself by `5^e` and returns its own mutable reference.",13,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",13,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",13,null],[11,"div_rem","","Divide self by another bignum, overwriting `q` with the quotient and `r` with the\nremainder.",13,null],[11,"eq","","",13,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",13,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"option"}}],[11,"cmp","","",13,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"ordering"}}],[11,"clone","","",13,{"inputs":[{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"fmt","","",13,{"inputs":[{"name":"big8x3"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","core::num::flt2dec::decoder","",14,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"fmt","","",14,{"inputs":[{"name":"decoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",14,{"inputs":[{"name":"decoded"}],"output":{"name":"decoded"}}],[11,"eq","","",15,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"fmt","","",15,{"inputs":[{"name":"fulldecoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"fulldecoded"}],"output":{"name":"fulldecoded"}}],[11,"fmt","core::num::flt2dec::strategy::grisu","",16,{"inputs":[{"name":"fp"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",16,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"mul","","Returns a correctly rounded product of itself and `other`.",16,{"inputs":[{"name":"fp"},{"name":"fp"}],"output":{"name":"fp"}}],[11,"normalize","","Normalizes itself so that the resulting mantissa is at least `2^63`.",16,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"normalize_to","","Normalizes itself to have the shared exponent.\nIt can only decrease the exponent (and thus increase the mantissa).",16,{"inputs":[{"name":"fp"},{"name":"i16"}],"output":{"name":"fp"}}],[11,"fmt","core::num::flt2dec","",17,{"inputs":[{"name":"part"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",17,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"clone","","",17,{"inputs":[{"name":"part"}],"output":{"name":"part"}}],[11,"len","","Returns the exact byte length of given part.",17,{"inputs":[{"name":"part"}],"output":{"name":"usize"}}],[11,"write","","Writes a part into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",17,null],[11,"clone","","",18,{"inputs":[{"name":"formatted"}],"output":{"name":"formatted"}}],[11,"len","","Returns the exact byte length of combined formatted result.",18,{"inputs":[{"name":"formatted"}],"output":{"name":"usize"}}],[11,"write","","Writes all formatted parts into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",18,null],[11,"fmt","","",19,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",19,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"clone","","",19,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"fmt","core::num::dec2flt::rawfp","",20,{"inputs":[{"name":"unpacked"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",20,{"inputs":[{"name":"unpacked"}],"output":{"name":"unpacked"}}],[11,"new","","",20,{"inputs":[{"name":"unpacked"},{"name":"u64"},{"name":"i16"}],"output":{"name":"unpacked"}}],[11,"fmt","core::num::dec2flt::parse","",21,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",22,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"fmt","","",22,{"inputs":[{"name":"decimal"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",22,null],[11,"eq","","",23,{"inputs":[{"name":"parseresult"},{"name":"parseresult"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"parseresult"},{"name":"parseresult"}],"output":{"name":"bool"}}],[11,"fmt","","",23,{"inputs":[{"name":"parseresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","core::num::dec2flt","",24,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"clone","","",24,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"parsefloaterror"}}],[11,"fmt","","",24,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",25,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",25,{"inputs":[{"name":"floaterrorkind"}],"output":{"name":"floaterrorkind"}}],[11,"fmt","","",25,{"inputs":[{"name":"floaterrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",24,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::num","",26,{"inputs":[{"name":"fpcategory"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",26,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"clone","","",26,{"inputs":[{"name":"fpcategory"}],"output":{"name":"fpcategory"}}],[11,"eq","","",27,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"parseinterror"}],"output":{"name":"parseinterror"}}],[11,"fmt","","",27,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",28,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",28,{"inputs":[{"name":"interrorkind"}],"output":{"name":"interrorkind"}}],[11,"fmt","","",28,{"inputs":[{"name":"interrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",27,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::nonzero","",29,null],[11,"fmt","","",29,{"inputs":[{"name":"nonzero"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",29,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"option"}}],[11,"lt","","",29,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"le","","",29,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"gt","","",29,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ge","","",29,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"cmp","","",29,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"ordering"}}],[11,"eq","","",29,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"clone","","",29,{"inputs":[{"name":"nonzero"}],"output":{"name":"nonzero"}}],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually \"non-zero\".",29,{"inputs":[{"name":"nonzero"},{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",29,{"inputs":[{"name":"nonzero"}],"output":{"name":"t"}}],[11,"new","core::ptr","Creates a new `Unique`.",30,null],[11,"get","","Dereferences the content.",30,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",30,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",30,null],[11,"fmt","","",30,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::marker","",31,null],[11,"eq","","",31,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",31,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",31,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",31,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",32,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",32,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",32,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",33,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",33,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",33,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",34,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",34,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",34,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",34,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",35,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",35,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",35,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cmp","",36,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",36,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",36,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",36,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",36,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",36,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",36,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"fmt","libc","",37,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",37,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",37,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",37,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",37,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",37,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",37,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",37,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",38,null],[11,"fmt","","",38,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",38,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",38,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",38,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",38,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"default","core::sync::atomic","",39,{"inputs":[{"name":"atomicbool"}],"output":{"name":"atomicbool"}}],[11,"default","","",40,{"inputs":[{"name":"atomicisize"}],"output":{"name":"atomicisize"}}],[11,"default","","",41,{"inputs":[{"name":"atomicusize"}],"output":{"name":"atomicusize"}}],[11,"default","","",42,{"inputs":[{"name":"atomicptr"}],"output":{"name":"atomicptr"}}],[11,"clone","","",43,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",39,{"inputs":[{"name":"atomicbool"},{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",39,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",39,null],[11,"swap","","Stores a value into the bool, returning the old value.",39,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",39,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_and","","Logical \"and\" with a boolean value.",39,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical \"nand\" with a boolean value.",39,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical \"or\" with a boolean value.",39,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical \"xor\" with a boolean value.",39,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",40,{"inputs":[{"name":"atomicisize"},{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",40,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",40,null],[11,"swap","","Stores a value into the isize, returning the old value.",40,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the `isize` if the current value is the same as the `current` value.",40,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",40,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",40,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",40,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",40,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",40,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",41,{"inputs":[{"name":"atomicusize"},{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",41,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",41,null],[11,"swap","","Stores a value into the usize, returning the old value.",41,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the `usize` if the current value is the same as the `current` value.",41,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_add","","Add to the current usize, returning the previous value.",41,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",41,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",41,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",41,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",41,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",42,null],[11,"load","","Loads a value from the pointer.",42,null],[11,"store","","Stores a value into the pointer.",42,null],[11,"swap","","Stores a value into the pointer, returning the old value.",42,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",42,null],[11,"fmt","","",41,{"inputs":[{"name":"atomicusize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",40,{"inputs":[{"name":"atomicisize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",39,{"inputs":[{"name":"atomicbool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",42,{"inputs":[{"name":"atomicptr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",44,{"inputs":[{"name":"cell"},{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",44,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",44,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",44,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",44,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",44,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"eq","","",44,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",45,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",45,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",45,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",45,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",46,{"inputs":[{"name":"refcell"},{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",46,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",46,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",46,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",46,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",46,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",46,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",46,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"eq","","",46,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",47,null],[11,"clone","","",47,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[11,"deref","","",48,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"clone","","Copies a `Ref`.",48,{"inputs":[{"name":"ref"},{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",48,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for a optional component of the borrowed data, e.g. an\nenum variant.",48,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",49,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for a optional component of the borrowed data, e.g.\nan enum variant.",49,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"drop","","",50,null],[11,"deref","","",49,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",49,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",51,{"inputs":[{"name":"unsafecell"},{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",51,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",51,null],[11,"clone","core::char","",52,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"escapeunicode"}}],[11,"clone","","",53,{"inputs":[{"name":"escapeunicodestate"}],"output":{"name":"escapeunicodestate"}}],[11,"next","","",52,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"option"}}],[11,"clone","","",54,{"inputs":[{"name":"escapedefault"}],"output":{"name":"escapedefault"}}],[11,"clone","","",55,{"inputs":[{"name":"escapedefaultstate"}],"output":{"name":"escapedefaultstate"}}],[11,"next","","",54,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"clone","core::iter","",56,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",56,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",56,null],[11,"next_back","","",56,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"clone","","",57,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",57,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",57,null],[11,"next_back","","",57,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"clone","","",58,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",58,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",58,null],[11,"clone","","",59,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"clone","","",60,{"inputs":[{"name":"chainstate"}],"output":{"name":"chainstate"}}],[11,"next","","",59,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",59,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",59,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",59,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",59,null],[11,"next_back","","",59,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"clone","","",61,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",61,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",61,null],[11,"next_back","","",61,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"clone","","",62,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"next","","",62,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",62,null],[11,"next_back","","",62,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"clone","","",63,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"next","","",63,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",63,null],[11,"next_back","","",63,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",64,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"next","","",64,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",64,null],[11,"next_back","","",64,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",65,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",65,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",65,null],[11,"nth","","",65,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",65,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",65,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"clone","","",66,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",66,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",66,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",66,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",66,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",66,null],[11,"peek","","Returns a reference to the next element of the iterator with out\nadvancing it, or None if the iterator is exhausted.",66,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks whether peekable iterator is empty or not.",66,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",67,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"next","","",67,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",67,null],[11,"clone","","",68,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"next","","",68,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",68,null],[11,"clone","","",69,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",69,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",69,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",69,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",69,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",69,null],[11,"clone","","",70,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",70,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",70,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",70,null],[11,"clone","","",71,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"next","","",71,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",71,null],[11,"clone","","",72,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"next","","",72,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",72,null],[11,"next_back","","",72,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",73,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",73,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",73,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",73,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",73,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",73,null],[11,"next_back","","",73,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"clone","","",74,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"next","","",74,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",74,null],[11,"next_back","","",74,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"clone","","",75,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",34,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",33,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter","",75,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",75,null],[11,"clone","","",76,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",76,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",76,null],[11,"next_back","","",76,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"next","","",75,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",75,null],[11,"next","core::ops","",33,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",33,null],[11,"next_back","","",33,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",34,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",77,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",77,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",77,null],[11,"next_back","","",77,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"next","","",78,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"size_hint","","",78,null],[11,"next_back","","",78,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"len","","",78,{"inputs":[{"name":"empty"}],"output":{"name":"usize"}}],[11,"clone","","",78,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"default","","",78,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"clone","","",79,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"next","","",79,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"size_hint","","",79,null],[11,"next_back","","",79,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"len","","",79,{"inputs":[{"name":"once"}],"output":{"name":"usize"}}],[11,"hash","core::option","",10,null],[11,"fmt","","",10,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",10,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",10,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",10,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",10,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",10,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",10,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",10,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",10,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"default","","",10,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",10,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",80,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"next","","",80,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",80,null],[11,"next_back","","",80,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"next","","",81,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",81,null],[11,"next_back","","",81,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",81,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",82,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",82,null],[11,"next_back","","",82,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",83,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",83,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",83,null],[11,"next_back","","",83,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",10,{"inputs":[{"name":"option"},{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",84,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",85,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"hash","core::result","",86,null],[11,"fmt","","",86,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",86,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",86,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",86,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",86,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",86,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",86,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",86,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",86,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",86,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",86,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result<T, E>` to `Option<T>`",86,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result<T, E>` to `Option<E>`",86,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result<T, E>` to `Result<&T, &E>`",86,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result<T, E>` to `Result<&mut T, &mut E>`",86,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_slice","","Converts from `Result<T, E>` to `&[T]` (without copying)",86,null],[11,"as_mut_slice","","Converts from `Result<T, E>` to `&mut [T]` (without copying)",86,null],[11,"map","","Maps a `Result<T, E>` to `Result<U, E>` by applying a function to an\ncontained `Ok` value, leaving an `Err` value untouched.",86,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result<T, E>` to `Result<T, F>` by applying a function to an\ncontained `Err` value, leaving an `Ok` value untouched.",86,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",86,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",86,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",86,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",86,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",86,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",86,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",86,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",86,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",86,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",86,{"inputs":[{"name":"result"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",86,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",86,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"next","","",87,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",87,null],[11,"next_back","","",87,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",87,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",88,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",88,null],[11,"next_back","","",88,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",89,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",89,null],[11,"next_back","","",89,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",86,{"inputs":[{"name":"result"},{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","core::simd","",90,{"inputs":[{"name":"i8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",90,{"inputs":[{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"fmt","","",91,{"inputs":[{"name":"i16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",91,{"inputs":[{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"fmt","","",92,{"inputs":[{"name":"i32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",92,{"inputs":[{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"fmt","","",93,{"inputs":[{"name":"i64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",93,{"inputs":[{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"fmt","","",94,{"inputs":[{"name":"u8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",94,{"inputs":[{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"fmt","","",95,{"inputs":[{"name":"u16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",95,{"inputs":[{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"fmt","","",96,{"inputs":[{"name":"u32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",96,{"inputs":[{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"fmt","","",97,{"inputs":[{"name":"u64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",97,{"inputs":[{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"fmt","","",98,{"inputs":[{"name":"f32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",98,{"inputs":[{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"fmt","","",99,{"inputs":[{"name":"f64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",99,{"inputs":[{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"add","","",94,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"add","","",95,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"add","","",96,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"add","","",97,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"add","","",90,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"add","","",91,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"add","","",92,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"add","","",93,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"add","","",98,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"add","","",99,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"sub","","",94,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"sub","","",95,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"sub","","",96,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"sub","","",97,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"sub","","",90,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"sub","","",91,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"sub","","",92,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"sub","","",93,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"sub","","",98,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"sub","","",99,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"mul","","",94,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"mul","","",95,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"mul","","",96,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"mul","","",97,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"mul","","",90,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"mul","","",91,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"mul","","",92,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"mul","","",93,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"mul","","",98,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"mul","","",99,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"div","","",98,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"div","","",99,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"shl","","",94,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"shl","","",95,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"shl","","",96,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"shl","","",97,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"shl","","",90,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"shl","","",91,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"shl","","",92,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"shl","","",93,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"shr","","",94,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"shr","","",95,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"shr","","",96,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"shr","","",97,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"shr","","",90,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"shr","","",91,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"shr","","",92,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"shr","","",93,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitand","","",94,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitand","","",95,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitand","","",96,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitand","","",97,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitand","","",90,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitand","","",91,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitand","","",92,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitand","","",93,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitor","","",94,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitor","","",95,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitor","","",96,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitor","","",97,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitor","","",90,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitor","","",91,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitor","","",92,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitor","","",93,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitxor","","",94,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitxor","","",95,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitxor","","",96,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitxor","","",97,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitxor","","",90,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitxor","","",91,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitxor","","",92,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitxor","","",93,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"as_slice","core::slice","View the underlying data as a subslice of the original data.",100,null],[11,"next","","",100,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",100,null],[11,"count","","",100,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"nth","","",100,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",100,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",100,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",100,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"into_slice","","View the underlying data as a subslice of the original data.",101,null],[11,"next","","",101,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",101,null],[11,"count","","",101,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"nth","","",101,{"inputs":[{"name":"itermut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",101,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next_back","","",101,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",102,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",102,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"size_hint","","",102,null],[11,"next_back","","",102,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",102,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",103,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",103,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"size_hint","","",103,null],[11,"next_back","","",103,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",104,{"inputs":[{"name":"genericsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",104,null],[11,"next","","",105,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"size_hint","","",105,null],[11,"next","","",106,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",106,null],[11,"next","","",107,{"inputs":[{"name":"splitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",107,null],[11,"next","","",108,{"inputs":[{"name":"rsplitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",108,null],[11,"clone","","",109,{"inputs":[{"name":"windows"}],"output":{"name":"windows"}}],[11,"next","","",109,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"size_hint","","",109,null],[11,"count","","",109,{"inputs":[{"name":"windows"}],"output":{"name":"usize"}}],[11,"nth","","",109,{"inputs":[{"name":"windows"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",109,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"next_back","","",109,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"clone","","",110,{"inputs":[{"name":"chunks"}],"output":{"name":"chunks"}}],[11,"next","","",110,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"size_hint","","",110,null],[11,"count","","",110,{"inputs":[{"name":"chunks"}],"output":{"name":"usize"}}],[11,"nth","","",110,{"inputs":[{"name":"chunks"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",110,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next_back","","",110,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next","","",111,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"size_hint","","",111,null],[11,"count","","",111,{"inputs":[{"name":"chunksmut"}],"output":{"name":"usize"}}],[11,"nth","","",111,{"inputs":[{"name":"chunksmut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",111,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"next_back","","",111,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"fmt","core::str::pattern","",112,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",112,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",112,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",112,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",113,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[11,"into_searcher","","",114,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",113,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",113,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",113,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",115,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",115,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",115,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",115,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",115,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",115,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",115,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",115,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"clone","","",116,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",116,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",116,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",116,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",116,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",116,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",116,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",116,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",117,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",117,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",117,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",117,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",117,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",117,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",117,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",117,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"fmt","","",118,{"inputs":[{"name":"strsearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",118,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"fmt","","",119,{"inputs":[{"name":"strsearcherimpl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",119,{"inputs":[{"name":"strsearcherimpl"}],"output":{"name":"strsearcherimpl"}}],[11,"fmt","","",120,{"inputs":[{"name":"emptyneedle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",120,{"inputs":[{"name":"emptyneedle"}],"output":{"name":"emptyneedle"}}],[11,"haystack","","",118,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",118,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",118,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",118,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",118,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"fmt","","",121,{"inputs":[{"name":"twowaysearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",121,{"inputs":[{"name":"twowaysearcher"}],"output":{"name":"twowaysearcher"}}],[11,"use_early_reject","","",122,{"inputs":[{"name":"matchonly"}],"output":{"name":"bool"}}],[11,"rejecting","","",122,null],[11,"matching","","",122,null],[11,"use_early_reject","","",123,{"inputs":[{"name":"rejectandmatch"}],"output":{"name":"bool"}}],[11,"rejecting","","",123,null],[11,"matching","","",123,null],[11,"eq","core::str","",124,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"ne","","",124,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"clone","","",124,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"parseboolerror"}}],[11,"fmt","","",124,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",124,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",125,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",125,{"inputs":[{"name":"utf8error"}],"output":{"name":"utf8error"}}],[11,"eq","","",125,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"ne","","",125,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",125,{"inputs":[{"name":"utf8error"}],"output":{"name":"usize"}}],[11,"fmt","","",125,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",126,{"inputs":[{"name":"chars"}],"output":{"name":"chars"}}],[11,"next","","",126,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"size_hint","","",126,null],[11,"next_back","","",126,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"as_str","","View the underlying data as a subslice of the original data.",126,{"inputs":[{"name":"chars"}],"output":{"name":"str"}}],[11,"clone","","",127,{"inputs":[{"name":"charindices"}],"output":{"name":"charindices"}}],[11,"next","","",127,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"size_hint","","",127,null],[11,"next_back","","",127,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"as_str","","View the underlying data as a subslice of the original data.",127,{"inputs":[{"name":"charindices"}],"output":{"name":"str"}}],[11,"clone","","",128,{"inputs":[{"name":"bytes"}],"output":{"name":"bytes"}}],[11,"next","","",128,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"size_hint","","",128,null],[11,"count","","",128,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"last","","",128,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"nth","","",128,{"inputs":[{"name":"bytes"},{"name":"usize"}],"output":{"name":"option"}}],[11,"next_back","","",128,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"len","","",128,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"clone","","",129,{"inputs":[{"name":"splitinternal"}],"output":{"name":"splitinternal"}}],[11,"next","","",130,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"clone","","",130,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",131,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"clone","","",131,{"inputs":[{"name":"rsplit"}],"output":{"name":"rsplit"}}],[11,"next_back","","",130,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next_back","","",131,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"next","","",132,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"clone","","",132,{"inputs":[{"name":"splitterminator"}],"output":{"name":"splitterminator"}}],[11,"next","","",133,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",133,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"rsplitterminator"}}],[11,"next_back","","",132,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"next_back","","",133,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",134,{"inputs":[{"name":"splitninternal"}],"output":{"name":"splitninternal"}}],[11,"next","","",135,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"clone","","",135,{"inputs":[{"name":"splitn"}],"output":{"name":"splitn"}}],[11,"next","","",136,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"clone","","",136,{"inputs":[{"name":"rsplitn"}],"output":{"name":"rsplitn"}}],[11,"clone","","",137,{"inputs":[{"name":"matchindicesinternal"}],"output":{"name":"matchindicesinternal"}}],[11,"next","","",138,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"clone","","",138,{"inputs":[{"name":"matchindices"}],"output":{"name":"matchindices"}}],[11,"next","","",139,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",139,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"rmatchindices"}}],[11,"next_back","","",138,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"next_back","","",139,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",140,{"inputs":[{"name":"matchesinternal"}],"output":{"name":"matchesinternal"}}],[11,"next","","",141,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"clone","","",141,{"inputs":[{"name":"matches"}],"output":{"name":"matches"}}],[11,"next","","",142,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",142,{"inputs":[{"name":"rmatches"}],"output":{"name":"rmatches"}}],[11,"next_back","","",141,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"next_back","","",142,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",143,{"inputs":[{"name":"lines"}],"output":{"name":"lines"}}],[11,"next","","",143,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"size_hint","","",143,null],[11,"next_back","","",143,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"clone","","",144,{"inputs":[{"name":"linesany"}],"output":{"name":"linesany"}}],[11,"clone","","",145,{"inputs":[{"name":"linesanymap"}],"output":{"name":"linesanymap"}}],[11,"call","","",145,null],[11,"call_mut","","",145,null],[11,"call_once","","",145,null],[11,"next","","",144,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"size_hint","","",144,null],[11,"next_back","","",144,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"clone","","",146,{"inputs":[{"name":"charrange"}],"output":{"name":"charrange"}}],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",147,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",147,{"inputs":[{"name":"siphasher"},{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",147,null],[11,"finish","","",147,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",147,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",147,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"eq","core::fmt::num","",148,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"ne","","",148,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"clone","","",148,{"inputs":[{"name":"binary"}],"output":{"name":"binary"}}],[11,"eq","","",149,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"ne","","",149,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"clone","","",149,{"inputs":[{"name":"octal"}],"output":{"name":"octal"}}],[11,"eq","","",150,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",150,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"clone","","",150,{"inputs":[{"name":"decimal"}],"output":{"name":"decimal"}}],[11,"eq","","",151,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"ne","","",151,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"clone","","",151,{"inputs":[{"name":"lowerhex"}],"output":{"name":"lowerhex"}}],[11,"eq","","",152,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"ne","","",152,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"clone","","",152,{"inputs":[{"name":"upperhex"}],"output":{"name":"upperhex"}}],[11,"eq","","",153,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"ne","","",153,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"clone","","",153,{"inputs":[{"name":"radix"}],"output":{"name":"radix"}}],[11,"clone","","",154,{"inputs":[{"name":"radixfmt"}],"output":{"name":"radixfmt"}}],[11,"fmt","","",154,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",154,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",154,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",154,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",154,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",154,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",154,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",154,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",154,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",154,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",154,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",154,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",154,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",154,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",154,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",154,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",154,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",154,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",154,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",154,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"write_str","core::fmt::builders","",155,{"inputs":[{"name":"padadapter"},{"name":"str"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated struct output.",156,{"inputs":[{"name":"debugstruct"},{"name":"str"},{"name":"debug"}],"output":{"name":"debugstruct"}}],[11,"finish","","Finishes output and returns any error encountered.",156,{"inputs":[{"name":"debugstruct"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated tuple struct output.",157,{"inputs":[{"name":"debugtuple"},{"name":"debug"}],"output":{"name":"debugtuple"}}],[11,"finish","","Finishes output and returns any error encountered.",157,{"inputs":[{"name":"debugtuple"}],"output":{"name":"result"}}],[11,"formatter","","Returns the wrapped `Formatter`.",157,{"inputs":[{"name":"debugtuple"}],"output":{"name":"formatter"}}],[11,"finish","","",158,null],[11,"entry","","Adds a new entry to the set output.",159,{"inputs":[{"name":"debugset"},{"name":"debug"}],"output":{"name":"debugset"}}],[11,"entries","","Adds the contents of an iterator of entries to the set output.",159,{"inputs":[{"name":"debugset"},{"name":"i"}],"output":{"name":"debugset"}}],[11,"finish","","Finishes output and returns any error encountered.",159,{"inputs":[{"name":"debugset"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the list output.",160,{"inputs":[{"name":"debuglist"},{"name":"debug"}],"output":{"name":"debuglist"}}],[11,"entries","","Adds the contents of an iterator of entries to the list output.",160,{"inputs":[{"name":"debuglist"},{"name":"i"}],"output":{"name":"debuglist"}}],[11,"finish","","Finishes output and returns any error encountered.",160,{"inputs":[{"name":"debuglist"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the map output.",161,{"inputs":[{"name":"debugmap"},{"name":"debug"},{"name":"debug"}],"output":{"name":"debugmap"}}],[11,"entries","","Adds the contents of an iterator of entries to the map output.",161,{"inputs":[{"name":"debugmap"},{"name":"i"}],"output":{"name":"debugmap"}}],[11,"finish","","Finishes output and returns any error encountered.",161,{"inputs":[{"name":"debugmap"}],"output":{"name":"result"}}],[11,"clone","core::fmt::rt::v1","",162,{"inputs":[{"name":"argument"}],"output":{"name":"argument"}}],[11,"clone","","",163,{"inputs":[{"name":"formatspec"}],"output":{"name":"formatspec"}}],[11,"eq","","",164,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"ne","","",164,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"clone","","",164,{"inputs":[{"name":"alignment"}],"output":{"name":"alignment"}}],[11,"clone","","",165,{"inputs":[{"name":"count"}],"output":{"name":"count"}}],[11,"clone","","",166,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"fmt","core::fmt","",167,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",167,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"clone","","",168,{"inputs":[{"name":"argumentv1"}],"output":{"name":"argumentv1"}}],[11,"clone","","",169,{"inputs":[{"name":"flagv1"}],"output":{"name":"flagv1"}}],[11,"clone","","",170,{"inputs":[{"name":"arguments"}],"output":{"name":"arguments"}}],[11,"fmt","","",170,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",170,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",171,{"inputs":[{"name":"formatter"},{"name":"bool"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",171,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",171,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_fmt","","Writes some formatted information into this instance",171,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"flags","","Flags for formatting (packed version of rt::Flag)",171,{"inputs":[{"name":"formatter"}],"output":{"name":"u32"}}],[11,"fill","","Character used as 'fill' whenever there is alignment",171,{"inputs":[{"name":"formatter"}],"output":{"name":"char"}}],[11,"align","","Flag indicating what form of alignment was requested",171,{"inputs":[{"name":"formatter"}],"output":{"name":"alignment"}}],[11,"width","","Optionally specified integer width that the output should be",171,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"precision","","Optionally specified precision for numeric types",171,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",171,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugstruct"}}],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",171,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugtuple"}}],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",171,{"inputs":[{"name":"formatter"}],"output":{"name":"debuglist"}}],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",171,{"inputs":[{"name":"formatter"}],"output":{"name":"debugset"}}],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",171,{"inputs":[{"name":"formatter"}],"output":{"name":"debugmap"}}],[11,"write_str","","",171,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",171,{"inputs":[{"name":"formatter"},{"name":"char"}],"output":{"name":"result"}}],[11,"write_fmt","","",171,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"fmt","","",167,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::marker","",31,{"inputs":[{"name":"phantomdata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cell","",44,{"inputs":[{"name":"cell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",46,{"inputs":[{"name":"refcell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",48,{"inputs":[{"name":"ref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",49,{"inputs":[{"name":"refmut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone_from","libc::dox","Performs copy-assignment from `source`.",172,null],[11,"clone_from","libc::dox::imp","Performs copy-assignment from `source`.",172,null],[11,"clone","libc","",0,{"inputs":[{"name":"utimbuf"}],"output":{"name":"utimbuf"}}],[11,"clone","","",1,{"inputs":[{"name":"timeval"}],"output":{"name":"timeval"}}],[11,"clone","","",2,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"clone","","",3,{"inputs":[{"name":"rlimit"}],"output":{"name":"rlimit"}}],[11,"clone","","",4,{"inputs":[{"name":"rusage"}],"output":{"name":"rusage"}}],[11,"clone","","",5,{"inputs":[{"name":"in_addr"}],"output":{"name":"in_addr"}}],[11,"clone","","",6,{"inputs":[{"name":"in6_addr"}],"output":{"name":"in6_addr"}}],[11,"clone","","",7,{"inputs":[{"name":"ip_mreq"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",8,{"inputs":[{"name":"ipv6_mreq"}],"output":{"name":"ipv6_mreq"}}],[11,"clone","","",9,{"inputs":[{"name":"dl_info"}],"output":{"name":"dl_info"}}],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[17,"WNOHANG","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null]],"paths":[[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"Dl_info"],[4,"Option"],[3,"Wrapping"],[3,"Big32x40"],[3,"Big8x3"],[3,"Decoded"],[4,"FullDecoded"],[3,"Fp"],[4,"Part"],[3,"Formatted"],[4,"Sign"],[3,"Unpacked"],[4,"Sign"],[3,"Decimal"],[4,"ParseResult"],[3,"ParseFloatError"],[4,"FloatErrorKind"],[4,"FpCategory"],[3,"ParseIntError"],[4,"IntErrorKind"],[3,"NonZero"],[3,"Unique"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"BorrowRef"],[3,"Ref"],[3,"RefMut"],[3,"BorrowRefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[4,"EscapeUnicodeState"],[3,"EscapeDefault"],[4,"EscapeDefaultState"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[4,"ChainState"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"StepBy"],[3,"RangeInclusive"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Slice"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"i8x16"],[3,"i16x8"],[3,"i32x4"],[3,"i64x2"],[3,"u8x16"],[3,"u16x8"],[3,"u32x4"],[3,"u64x2"],[3,"f32x4"],[3,"f64x2"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"GenericSplitN"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[4,"StrSearcherImpl"],[3,"EmptyNeedle"],[3,"TwoWaySearcher"],[4,"MatchOnly"],[4,"RejectAndMatch"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"SplitInternal"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitNInternal"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndicesInternal"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"MatchesInternal"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"LinesAnyMap"],[3,"CharRange"],[3,"SipHasher"],[3,"Binary"],[3,"Octal"],[3,"Decimal"],[3,"LowerHex"],[3,"UpperHex"],[3,"Radix"],[3,"RadixFmt"],[3,"PadAdapter"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugInner"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Argument"],[3,"FormatSpec"],[4,"Alignment"],[4,"Count"],[4,"Position"],[3,"Error"],[3,"ArgumentV1"],[4,"FlagV1"],[3,"Arguments"],[3,"Formatter"],[8,"Clone"]]};
searchIndex['block'] = {"items":[[0,"","block","A Rust interface for Objective-C blocks.",null,null],[3,"Block","","An Objective-C block that takes arguments of `A` when called and\nreturns a value of `R`.",null,null],[3,"RcBlock","","A reference-counted Objective-C block.",null,null],[3,"ConcreteBlock","","An Objective-C block whose size is known at compile time and may be\nconstructed on the stack.",null,null],[8,"BlockArguments","","Types that may be used as the arguments to an Objective-C block.",null,null],[10,"call_block","","Calls the given `Block` with self as the arguments.",0,null],[8,"IntoConcreteBlock","","Types that may be converted into a `ConcreteBlock`.",null,null],[16,"Ret","","The return type of the resulting `ConcreteBlock`.",1,null],[10,"into_concrete_block","","Consumes self to create a `ConcreteBlock`.",1,{"inputs":[{"name":"intoconcreteblock"}],"output":{"name":"concreteblock"}}],[11,"call","","Call self with the given arguments.",2,{"inputs":[{"name":"block"},{"name":"a"}],"output":{"name":"r"}}],[11,"new","","Construct an `RcBlock` for the given block without copying it.\nThe caller must ensure the block has a +1 reference count.",3,null],[11,"copy","","Constructs an `RcBlock` by copying the given block.",3,null],[11,"clone","","",3,{"inputs":[{"name":"rcblock"}],"output":{"name":"rcblock"}}],[11,"deref","","",3,{"inputs":[{"name":"rcblock"}],"output":{"name":"block"}}],[11,"drop","","",3,{"inputs":[{"name":"rcblock"}],"output":null}],[11,"new","","Constructs a `ConcreteBlock` with the given closure.\nWhen the block is called, it will return the value that results from\ncalling the closure.",4,{"inputs":[{"name":"concreteblock"},{"name":"f"}],"output":{"name":"self"}}],[11,"copy","","Copy self onto the heap as an `RcBlock`.",4,{"inputs":[{"name":"concreteblock"}],"output":{"name":"rcblock"}}],[11,"clone","","",4,{"inputs":[{"name":"concreteblock"}],"output":{"name":"self"}}],[11,"deref","","",4,{"inputs":[{"name":"concreteblock"}],"output":{"name":"block"}}],[11,"deref_mut","","",4,{"inputs":[{"name":"concreteblock"}],"output":{"name":"block"}}]],"paths":[[8,"BlockArguments"],[8,"IntoConcreteBlock"],[3,"Block"],[3,"RcBlock"],[3,"ConcreteBlock"]]};
initSearch(searchIndex);
